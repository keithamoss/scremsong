[supervisord]
nodaemon=true
logfile=/app/logs/scremsong_supervisord.log
loglevel=info


[program:scremsong_python_rq]
; Point the command to the specific rq command you want to run.
; If you use virtualenv, be sure to point it to
; /path/to/virtualenv/bin/rq
; Also, you probably want to include a settings module to configure this
; worker.  For more info on that, see http://python-rq.org/docs/workers/
command=python manage.py rqworker --with-scheduler high default low
; process_num is required if you specify >1 numprocs
process_name=%(program_name)s-%(process_num)s

; If you want to run more than one worker instance, increase this
# 1 for streaming, 1 for Twitter rate limit collection, 1 for tweet backfill + processing tweets, and 1 for solely processing tweets
numprocs=4

; This is the directory from which RQ is ran. Be sure to point this to the
; directory where your source code is importable from
directory=/app

; RQ requires the TERM signal to perform a warm shutdown. If RQ does not die
; within 10 seconds, supervisor will forcefully kill it
stopsignal=TERM

; These are up to you
autostart=true
autorestart=true

# How long it needs to be up for to be considered "running"
startsecs=5

# Choose where you want your log to go
stdout_logfile=/app/logs/scremsong_python_rq_workers.log
redirect_stderr=True